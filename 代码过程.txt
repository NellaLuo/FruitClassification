1 新建基于对话框的MFC框架
2 设置对话框
3 调入CDib.h和.cpp；
   CFruitClassificationDlg.h头文件中全局变量声明、#include；
4 打开图片（200*200）并显示于控件上
5 新建CWvltTrans（小波变换类）
  完成三层小波变换，并显示（但结果没有保存为一张图片）
6 收集水果图像https://pixabay.com/            29页
7 计算图像库的特征（小波特征），并写入文件
  （读入图像库时是按【名称】，如1，12，101）
8 生成特征向量
  颜色直方图特征：R[i] G[i] B[i] (0-255)  因为太多，所以文件中直接存储已计算好的欧氏距离
                           (共256*3) ----（距离）（排序好的）            （欧氏距离：ColorHist.txt）
  颜色对特征：      copairFile.pair[j].o_dis （32个）+copairFile.ave+copairFile.pair_count
                           共32+1+1=34个                    （文件：ColorPairFeature32）
  色彩共生矩阵：  featureAll[i][j]   （i为图像库中图片数，j：0-7）
                           共8个                        （文件：featureAll）（欧氏距离：ColorCoOccur.txt）
【上面3个特征需要在原系统中运行】
  小波：               avg,sd
                           共2个              （文件：WTfeature）（欧氏距离：WTsd.txt）

（欧式距离1，欧式距离2，欧式距离3，欧式距离4）
特征融合---设置权重   得到一个值f   【颜色直方图比重一定要大】
计算出图像库中所有图像与待识别图像的f
对f进行排序
取最小的K个
根据这K个训练样本的标记进行投票得到测试样本的标记

F:\毕业设计\codes\fruit\***.bmp
【修改过水果库命名：比如1，10识别有问题】
【图像库确定后，WTfeature写入文件，系统只需运行一次，之后便可注释掉】

【运行过程： 【所有的路径名都不要改动！！！！！！！！！！！！】
     {若图像库改动，则删去已经运行过生成的两个特征文件！！}
     {重新运行时，不要再点击生成特征文件！！！！！！}
 1 小波变换
 2 两个特征文件
 3 先点基于颜色
    再点综合的（因为综合的有基于颜色代码里的tmpF1赋值）
    小波随意
  】

9 K-最近邻是分类器算法中最通俗易懂的一种，计算测试样本到各训练样本的距离，取其中最小的K个，并根据这K个训练样本的标记进行投票得到测试样本的标记。算法的思路清晰简单，然而对于海量数据计算量过大，每个训练样本都有一个距离必须度量，耗费大量时间。

10 利用软件可以显示【颜色直方图】

11 将RGB全部写入文件
